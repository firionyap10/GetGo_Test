// <auto-generated />
using System;
using CarBooking.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarBooking.Data.Migrations
{
    [DbContext(typeof(CarBookingContext))]
    partial class CarBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarBooking.Entities.Bookings.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CarBooking.Entities.Cars.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("X")
                        .HasPrecision(11, 8)
                        .HasColumnType("decimal(11,8)");

                    b.Property<decimal>("Y")
                        .HasPrecision(11, 8)
                        .HasColumnType("decimal(11,8)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CarA",
                            PlateNumber = "AAAA",
                            X = 1m,
                            Y = 2m
                        },
                        new
                        {
                            Id = 2,
                            Name = "CarB",
                            PlateNumber = "BBBB",
                            X = 2m,
                            Y = 3m
                        },
                        new
                        {
                            Id = 3,
                            Name = "CarC",
                            PlateNumber = "CCCC",
                            X = 3m,
                            Y = 4m
                        },
                        new
                        {
                            Id = 4,
                            Name = "CarD",
                            PlateNumber = "DDDD",
                            X = 4m,
                            Y = 5m
                        },
                        new
                        {
                            Id = 5,
                            Name = "CarE",
                            PlateNumber = "EEEE",
                            X = 5m,
                            Y = 6m
                        });
                });

            modelBuilder.Entity("CarBooking.Entities.Bookings.Booking", b =>
                {
                    b.HasOne("CarBooking.Entities.Cars.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
